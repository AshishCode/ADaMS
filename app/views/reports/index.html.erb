<!DOCTYPE html>
<html>
<head lang="en">
<style type="text/css">

</style>
<script type="text/javascript">
        //angular running only once..so reloading the page once to load it..temporary fix
        $(document).ready(function() {
            if (window.location.href.indexOf('reload')==-1) {
                 window.location.replace(window.location.href+'?reload');
            }
        });



        //angular code for the grid table
        var fileBrowserModule = angular.module('account', ['agGrid']);

        fileBrowserModule.controller('accountController', function($scope) {

        var columnDefs = [
            {headerName: 'Clients', field: 'item', width: 200, cellRenderer: {
                renderer: 'group'
            }},
            //{headerName: "", field: "projects",headerGroup: '', width: 120},
            //employee_details header
            //{headerName: "Employee_Name", field: "employee_name",headerGroup: 'Employee_Details', width: 120},
            {headerName: "Total_hours", field: "total_hours",headerGroup: 'Employee_Details', width: 90},
            //{headerName: "Role", field: "role", headerGroup: 'Employee_Details', width: 70},
            {headerName: "Rate", field: "rate", headerGroup: 'Employee_Details', width: 70},
            {headerName: "Is_Billed", field: "is_billed", headerGroup: 'Employee_Details', width: 90},
            //invoice_details header
            {headerName: "Income", field: "income", headerGroup: 'Invoice_Details', width: 90},
            {headerName: "Service tax(On INR Only)", field: "servicetax", headerGroup: 'Invoice_Details',width: 170},
            {headerName: "Gross_Income", field: "gross_income", headerGroup: 'Invoice_Details', width: 110},
            {headerName: "Net_payable", field: "net_payable", headerGroup: 'Invoice_Details', width: 90}
        ];

        // function currencyRenderer(params) {
        //     if (params.value) {
        //         return '£ ' + params.value.toLocaleString();
        //     } else {
        //         return null;
        //     }
        // }

        $scope.gridOptions = {
            columnDefs: columnDefs,
            rowData: createRowData(),
            //rowSelection: 'single',
            <% if params[:report_type] == "weekly" %>
                groupKeys: ['month','week','category', 'projects', 'roles'],
            <% else %>
                groupKeys: ['month','category', 'projects', 'roles'],
            <% end %>
            groupUseEntireRow: false,
            groupHeaders: true,
            groupDefaultExpanded: false,
            groupIncludeFooter: false,
            groupAggFields: ['total_hours','income','servicetax','gross_income','net_payable'],
            groupAggFunction: groupAggFunction,
            enableColResize: true,
            enableSorting: true,
            forPrint: true,
            groupSuppressAutoColumn: true,
            icons: {
                groupExpanded: '<i class="fa fa-minus-square-o"/>',
                groupContracted: '<i class="fa fa-plus-square-o"/>'
            },
            enableFilter: false
        };
        function groupAggFunction(rows) {

            var sums = {
                total_hours:0,
                income: 0,
                servicetax: 0,
                gross_income: 0,
                net_payable: 0

            };

            rows.forEach(function(row) {

                var data = row.data;

                sums.total_hours += parseFloat(data.total_hours);
                sums.income += parseFloat(data.income);
                sums.servicetax += parseFloat(data.servicetax);
                sums.gross_income += parseFloat(data.gross_income);
                sums.net_payable += parseFloat(data.net_payable);
            });

            return sums;
         }


        function createRowData() {
            var rows = [];
            <% @client.each {|client| @timesheet.each { |entry| if entry.client_id == client.id %>
            ['<%= @project.where("id" => entry.project_id).first.project_code %>'].forEach( function (item) {
                //rows.push({category: "<%= client.client_name %>", item: item});
            //});
            
            //month array
            var month = new Array();
            month[1] = "January";
            month[2] = "February";
            month[3] = "March";
            month[4] = "April";
            month[5] = "May";
            month[6] = "June";
            month[7] = "July";
            month[8] = "August";
            month[9] = "September";
            month[10] = "October";
            month[11] = "November";
            month[12] = "December";

            //week array
            var week = new Array();
            week[1] = "Week-1";
            week[2] = "Week-2";
            week[3] = "Week-3";
            week[4] = "Week-4";
            week[5] = "Week-5";

            //rows.forEach( function(row) {
            var row =[];
                row.item ="<%= User.find(entry.employee_id).name %>";
                row.month = month[<%= entry.month %>];
                row.week = "Week " + <%= entry.week %>;
                row.projects = "<%= @project.where("id" => entry.project_id).first.project_code %>";
                row.category = "<%= client.client_name %>"
                row.employee_name = "<%= User.find(entry.employee_id).name %>";
                row.total_hours = "<%= (entry.total_hours).to_f %>";
                row.roles = "<%= @rolez.where("id" => entry.role_id).first.role_name %>";
                row.rate = "<%= @currency_names[@rolez.where("id" => entry.role_id).first.currency_id].to_s + ' ' + entry.rate.to_s %>";
                row.is_billed = "<%= if entry.is_billed then 'Yes' else 'No' end %>";
                row.income = "<%= ((if entry.is_billed then 1 else 0 end).to_f * entry.rate*entry.total_hours) %>";
                row.servicetax = "<%= if @currency_names[@rolez.where(:id => entry.role_id).first.currency_id] == "₹"
                                '%.2f' % ((if entry.is_billed then 1 else 0 end).to_f * 0.14 * entry.rate * entry.total_hours)
                            else
                                '0.00'
                            end %>";
                row.gross_income = "<%= '%.2f' % ((if entry.is_billed then 1 else 0 end).to_f * ((entry.rate*entry.total_hours) + (0.14 * entry.rate * entry.total_hours))) %>";
                row.net_payable = "<%= '%.2f' % ((if entry.is_billed then 1 else 0 end).to_f * ((0.9 * entry.rate * entry.total_hours) + (0.14 * entry.rate * entry.total_hours))) %>";

            //});
            rows.push(row);
        });
            <% else
               end
            } } %>

            return rows;
        }
    });

</script>
</head>

<body  style="padding: 10px">
<form class="form-horizontal" method="GET" action="/reports" id="filter">
    <div class="form-group">
        <div class="col-sm-3">
            <label for="filter_type"> Report type :</label> <br>
                <input id="monthly_radio" type="radio" name="report_type" required="required" value="monthly" /> <label for="monthly_radio">Monthly</label>
                <input id="weekly_radio" type="radio" name="report_type" required="required" value="weekly" /> <label for="weekly_radio">Weekly</label>
        </div>
        <div class="col-sm-3">
            <label for="from_date">From :</label>
            <input style="width:auto;" class="form-control" value="<%= if params.has_key?(:from_date)
                                                                            params[:from_date]
                                                                        else
                                                                            Date.today - 30 
                                                                        end  %>" 
            name="from_date" id="from_date" required="required" disabled/>
        </div>
        <div class="col-sm-3">
            <label for="to_date">To :</label>
            <input style="width:auto;" class="form-control" value="<%= if params.has_key?(:to_date)
                                                                            params[:to_date]
                                                                        else
                                                                            Date.today 
                                                                        end  %>" 
            name="to_date" id="to_date" required="required" disabled/>
        </div>
        <div class="col-sm-3">
            <button id="submit" class="buttons" style="border-radius:100px;margin-top: 9%;"><i class="glyphicon glyphicon-ok"></i> </button>
        </div>
    </div>
</form>
<!--
<form method="GET" action="/reports" id="filter">
    <input style="width:auto;" class="form-control" id="from_date"  min=""/>
    <label for="year_select">Year :</label>
    <select name="year" id="year_select" multiple>
                    <option  value="2015">2015</option>
                    <option  value="2014">2014</option>
    </select>
    &nbsp;
    <label for="month_select">Month :</label>
    <select name="month" id="month_select" multiple>
                    <option  value="1">January</option>
                    <option  value="2">February</option>
                    <option  value="3">March</option>
                    <option  value="4">April</option>
                    <option  value="5">May</option>
                    <option  value="6">June</option>
                    <option  value="7">July</option>
                    <option  value="8">August</option>
                    <option  value="9">September</option>
                    <option  value="10">October</option>
                    <option  value="11">November</option>
                    <option  value="12">December</option>

    </select>
    &nbsp;
    <label for="week_select">Week :</label>
     <select name="week" id="week_select" multiple>
                <%  date_entry = Date.today.strftime("%Y-%m-%d")
                    data = date_entry.split('-')
                    days = Time.days_in_month(data[1].to_i, data[0].to_i)
                    weeks = days/(days-(data[2].to_i))
                    i = 1
                    until i > weeks do
                        
                    %>
                    <option  value="1">Week <%= i %></option>
                    <% i += 1
                    end %>
    </select>
    <button id="submit" class="buttons" style="border-radius:100px;"><i class="glyphicon glyphicon-ok"></i> </button>

</form>

<br>
-->
<!-- <div id="filter_div" class="col-sm-9">  
    <form id ="date_filter" action="/reports %>" method="GET" class="form-horizontal">
    <div class="form-group">
            <div class="col-sm-9"> 
                   
            </div>
            <div class="col-sm-3">
            </div>
        </div>

    </form>
</div> -->
<div ng-app="account">
    
    <div ng-controller="accountController" style="">
        <div ag-grid="gridOptions" style="height: 100%; width:100%;" class="ag-blue">
        </div>
    </div>
</div>
    <div class="report_div" style="display:none;">
        <div>
            <table id ="reports" class ="table "data-toggle="table" data-show-columns="true" data-search="true" data-pagination="true" data-show-filter="true" data-sort-name="date" data-sort-order ="desc"
                > 

                    <thead>                      
                    <tr class="success">                          
                        <!-- <th data-field="id" data-align="right" data-sortable="true">ID</th> -->
                        <th data-sortable="true">Client</th>
                        <th data-sortable="true">Project</th>
                        <th>Employee_Name</th>
                        <th>Total Hours</th>
                        <th>Month</th>
                        <th>Week</th>
                        <th>Role</th>
                        <th>Rate</th>
                        <th>Income</th>
                        <th>Service tax(On INR Only)</th>
                        <th>Gross Income</th>
                        <th>Net Payable Amount</th>             
                      </tr>
                    </thead>
                    <tbody>
                <% @timesheet.each do |entry| %>
                  <tr>
                    <!-- <td></td> -->
                    
                    <td><%= @client.where("id" =>entry.client_id).first.client_name
                                                            %></td> 
                    <td><%= @project.where("id" => entry.project_id).first.project_name %></td>
                    <td><%= User.find(entry.employee_id).name %></td>   
                    <td><%= entry.total_hours %></td> 
                    <% #month array
                        month = Array.new
                        month[1] = "January"
                        month[2] = "February"
                        month[3] = "March"
                        month[4] = "April"
                        month[5] = "May"
                        month[6] = "June"
                        month[7] = "July"
                        month[8] = "August"
                        month[9] = "September"
                        month[10] = "October"
                        month[11] = "November"
                        month[12] = "December"

                       #week array
                       week = Array.new
                       week[1] = "Week-1"
                       week[2] = "Week-2"
                       week[3] = "Week-3"
                       week[4] = "Week-4"
                       week[5] = "Week-5"
                    %>
                    <td><%= month[entry.month] %></td> 
                    <td><%= "Week " + entry.week.to_s %></td>
                    <td><%= @rolez.where("id" => entry.role_id).first.role_name %></td>  
                    <td><%= entry.rate %></td> 
                    <td><%= entry.rate*entry.total_hours %></td>
                    <td><%= if @currency_names[@rolez.where(:id => entry.role_id).first.currency_id] == "₹"
                                '%.2f' % (0.14 * entry.rate * entry.total_hours)
                            else
                                "None"
                            end %></td>
                    <td><%= '%.2f' % ((entry.rate*entry.total_hours) + (0.14 * entry.rate * entry.total_hours)) %></td>
                    <td><%= '%.2f' % ((0.9 * entry.rate * entry.total_hours) + (0.14 * entry.rate * entry.total_hours))%></td>
                  </tr>
                <% end %>      
                </tbody>
                </table>
        </div>
    </div>

</body>
<script type="text/javascript">
//enabling the date selectors after a report type has been chosen
$("#monthly_radio").change(function(){
    document.getElementById("from_date").disabled = false;
    document.getElementById("to_date").disabled = false;

    $("#from_date").datepicker('option', 'maxDate', 'today');
    $("#to_date").datepicker('option', 'maxDate', 'today');    

});

$("#weekly_radio").change(function(){
    document.getElementById("from_date").disabled = false;
    document.getElementById("to_date").disabled = false;

    //disabling the dates before the current month and after current date
    //var date = new Date(new Date());
    //var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);
    //$("#from_date").datepicker('option', 'minDate', firstDay);
    $("#from_date").datepicker('option', 'maxDate', 'today');

    //$("#to_date").datepicker('option', 'minDate', firstDay);
    $("#to_date").datepicker('option', 'maxDate', 'today');    
});

//datepicker
$( "#from_date" ).datepicker({
      changeMonth: true,//this option for allowing user to select month
      changeYear: true, //this option for allowing user to select from year range
      inline: true,
      showOtherMonths: true,
      dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
      onSelect: function(dateText) {
                if(document.getElementById("monthly_radio").checked){
                    //getting the first and last day of the month chosen
                    var date = new Date(dateText); // get current selected date
                    var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);
                    //var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);

                    //setting the first date as the default date
                    $("#from_date").datepicker('setDate', firstDay);
                    
                    //changing min and max date for the to_date input
                    $("#to_date").datepicker('option', 'minDate', firstDay);
                    $("#to_date").datepicker('option', 'maxDate', 'today');

                }
                //setting the minimum and maximum date in the to calendar

                if(document.getElementById("weekly_radio").checked){
                    //disabling the dates in to and from before the current month and after last date of current month
                    var date = new Date(dateText);
                    var firstDayMonth = new Date(date.getFullYear(), date.getMonth(), 1);
                    var lastDayMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0);

                    //from_input
                    $("#from_date").datepicker('option', 'minDate', firstDayMonth);
                    $("#from_date").datepicker('option', 'maxDate', 'today');    

                    //to_input
                    $("#to_date").datepicker('option', 'maxDate', 'today'); 

                    var curr = new Date(dateText); // get current selected date
                    var first = curr.getDate() - curr.getDay(); // First day is the day of the month - the day of the week
                    var last = first + 6; // last day is the first day + 6

                    //var firstday = new Date(curr.setDate(first)).toUTCString();

                    var firstdayWeek = new Date(curr.getFullYear(), curr.getMonth(), first);
                    //var lastday = new Date(curr.setDate(last)).toUTCString();
                    //alert(firstday + "---" + lastday);
                    //    alert(dateText);
                    $("#from_date").datepicker('setDate', firstdayWeek);

                    //removing the min date constraint from from date after week selection
                    $("#from_date").datepicker('option', 'minDate', null);
                    //setting the minimum date of to_date to the selected date in from
                    $("#to_date").datepicker('option', 'minDate',firstdayWeek);

                }
            }
    });

$( "#to_date" ).datepicker({
      changeMonth: true,//this option for allowing user to select month
      changeYear: true, //this option for allowing user to select from year range
      inline: true,
      showOtherMonths: true,
      dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
      onSelect: function(dateText) {
                if(document.getElementById("monthly_radio").checked){
                    //getting the first and last day of the month chosen
                    var date = new Date(dateText);
                    //var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);
                    var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);

                    //setting the first date as the default date
                    $("#to_date").datepicker('setDate', lastDay);
                }

                 if(document.getElementById("weekly_radio").checked){
                    var curr = new Date(dateText); // get current date
                    var first = curr.getDate() - curr.getDay(); // First day is the day of the month - the day of the week
                    var last = first + 6; // last day is the first day + 6

                    //var firstday = new Date(curr.setDate(first)).toUTCString();
                    var lastday = new Date(curr.getFullYear(), curr.getMonth(), last);
                    //alert(firstday + "---" + lastday);

                    //changing the selected date to next week last date in case date is lesser than the selected from date
                    if($("#from_date").val()>dateText){
                        var from = new Date($("#from_date").val()); // get current date
                        var last = from.getDate() - from.getDay() + 6;
                        var lastday = new Date(curr.getFullYear(), curr.getMonth(), last);
                        $("#to_date").datepicker('setDate', lastday);

                    } else {
                        
                        $("#to_date").datepicker('setDate', lastday);

                    }

                }
        }
});
// code for using checklist filter
// $(document).ready(function(){
//     //disabling week and month select on the basis of year or month selected
//     $("#year_select").change(function(){

//         var selected = $("#year_select option:selected");
//         var count=0;
//         selected.each(function(){
//             count++;
//         });
//         if(count>1) {
//             $("#week_select").multiselect('disable');
//             $("#month_select").multiselect('disable');
//         }
//         else {
//             $("#week_select").multiselect('rebuild');
//             $("#month_select").multiselect('rebuild');
//         }
//     });

//     $("#month_select").change(function(){

//         var selected = $("#month_select option:selected");
//         var count=0;
//         selected.each(function(){
//             count++;
//         });
//         if(count>1)
//             $("#week_select").multiselect('disable');
//         else
//             $("#week_select").multiselect('rebuild');
//     });

//     //changing select dropdowns to dropdown checkboxes        
//     $('#year_select').multiselect({
//                 includeSelectAllOption: true,
//                 disableIfEmpty: true
//             });

//     $('#month_select').multiselect({
//                 includeSelectAllOption: true,
//                 disableIfEmpty: true
//             });

//     $('#week_select').multiselect({
//                 includeSelectAllOption: true,
//                 disableIfEmpty: true
//             });

//     //editing the form before submiting
//     $('#submit').click(function (e) {

//             //e.preventDefault();

//             //fetching the selected values
//             var years ="";
//             var selected = $("#year_select option:selected");
//             selected.each(function () {
//                 years += $(this).val()+ ",";
//             });

//             var months ="";
//             var selected = $("#month_select option:selected");
//             selected.each(function () {
//                 months += $(this).val()+ ",";
//             });

//             var weeks ="";
//             var selected = $("#week_select option:selected");
//             selected.each(function () {
//                 weeks += $(this).val()+ ",";
//             });

//             //removing the select input dropdown
//             $("#year_select").remove();
//             $("#month_select").remove();
//             $("#week_select").remove();

//             //inserting input fields with the values
//             $("<input type='text' value='"+years+"' />")
//              .attr("id", "years")
//              .attr("name", "years")
//              .appendTo("#filter");

//             $("<input type='text' value='"+months+"' />")
//              .attr("id", "months")
//              .attr("name", "months")
//              .appendTo("#filter");

//             $("<input type='text' value='"+weeks+"' />")
//              .attr("id", "weeks")
//              .attr("name", "weeks")
//              .appendTo("#filter");

//             //submitting the form after changing the form elements
//             //$("#filter").submit();

//             //window.location.replace("http://localhost:3000/reports?years="+message+"");

//         });
// });
</script>

</html>
